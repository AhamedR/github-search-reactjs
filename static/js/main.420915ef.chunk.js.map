{"version":3,"sources":["serviceWorker.js","components/profileSummary/Repository.js","components/profileSummary/Connection.js","components/common/Loader.js","components/common/MessageNote.js","action/gitHubUserAction.js","container/UserProfile.js","components/InduvidualUser.js","container/GitHubSearch.js","components/common/PageNotFound.js","routes/Routes.js","reducer/userDataReducer.js","reducer/index.js","index.js"],"names":["Boolean","window","location","hostname","match","Repository","props","name","className","Connection","username","avatar","to","target","alt","src","Loader","message","MessageNote","searchUser","pageNo","noOfItems","url","type","payload","axios","get","then","response","data","catch","error","getFollowers","getFollowings","getRepos","UserProfile","state","isRequestSent","userDetails","followings","followers","repos","getProfileDetails","dispatch","setState","renderRepositories","length","Object","values","map","repo","id","key","renderConnections","connectionType","sortBy","toLowerCase","connection","login","avatar_url","this","params","getUserDetails","prevProps","public_repos","following","Component","connect","userData","InduvidualUser","userId","avatarUrl","GitHubSearch","searchKeyword","searchResult","isSearching","handleChange","event","value","renderInduvidualElement","allUsers","user","handlePagination","request","isPaginationEnable","totalCount","total_count","Math","floor","renderPagination","onClick","placeholder","onChange","items","PageNotFound","Routes","path","exact","component","userDataReducer","action","allReducers","combineReducers","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","reducer","__REDUX_DEVTOOLS_EXTENSION__","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.420915ef.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nfunction Repository(props) {\r\n    const {\r\n        name,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"connection-repository\">\r\n            { name }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Repository;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Connection(props) {\r\n    const {\r\n        username,\r\n        avatar,\r\n    } = props;\r\n\r\n    return (\r\n        <Link\r\n            className=\"connection\"\r\n            to={`/github-user/${username}`}\r\n            target=\"_blank\"\r\n        >\r\n            <img alt=\"username\" src={avatar} />\r\n            <p className=\"connection-username\">\r\n                {username}\r\n            </p>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default Connection;\r\n","import React from 'react';\r\n\r\nfunction Loader(props) {\r\n    const {\r\n        message,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"loader-body\">\r\n            <div className=\"loader\">\r\n                <div className=\"square\" />\r\n                <div className=\"square\" />\r\n                <div className=\"square\" />\r\n            </div>\r\n            <div className=\"loader-text\">{message}...</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\n\r\nfunction MessageNote(props) {\r\n    const {\r\n        message,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"message-note\">\r\n            { message }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageNote;\r\n","import axios from 'axios';\r\n\r\nexport function searchUser(username, pageNo, noOfItems) {\r\n    const url = `https://api.github.com/search/users?q=${username}+in:login&page=${pageNo}&per_page=${noOfItems}`;\r\n\r\n    const request = axios.get(url)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => (error.response));\r\n\r\n    return {\r\n        type: 'SEARCH_RESULT',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getUserDetails(username) {\r\n    const url = `https://api.github.com/users/${username}`;\r\n\r\n    const request = axios.get(url)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => (error.response));\r\n\r\n    return {\r\n        type: 'GET_USER_DETAILS',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getFollowers(username) {\r\n    const url = `https://api.github.com/users/${username}/followers`;\r\n\r\n    const request = axios.get(url)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => (error.response));\r\n\r\n    return {\r\n        type: 'GET_USER_FOLLOWERS',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getFollowings(username) {\r\n    const url = `https://api.github.com/users/${username}/following`;\r\n\r\n    const request = axios.get(url)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => (error.response));\r\n\r\n    return {\r\n        type: 'GET_USER_FOLLOWINGS',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getRepos(username) {\r\n    const url = `https://api.github.com/users/${username}/repos`;\r\n\r\n    const request = axios.get(url)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => (error.response));\r\n\r\n    return {\r\n        type: 'GET_USER_REPOS',\r\n        payload: request\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Repository from '../components/profileSummary/Repository';\r\nimport Connection from '../components/profileSummary/Connection';\r\nimport Loader from '../components/common/Loader';\r\nimport MessageNote from '../components/common/MessageNote';\r\nimport {\r\n    getUserDetails,\r\n    getFollowings,\r\n    getFollowers,\r\n    getRepos,\r\n} from '../action/gitHubUserAction';\r\n\r\nclass UserProfile extends Component {\r\n    state = {\r\n        isRequestSent: false,\r\n        userDetails: null,\r\n        followings: null,\r\n        followers: null,\r\n        username: null,\r\n        repos: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const username = this.props.match.params.username;\r\n\r\n        this.props.dispatch(getUserDetails(username));\r\n\r\n        this.setState({\r\n            username,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n            const {\r\n                isRequestSent,\r\n            } = this.state;\r\n\r\n            const {\r\n                userDetails,\r\n                followings,\r\n                followers,\r\n                repos,\r\n            } = this.props;\r\n\r\n            /**\r\n             * Send requset to get user details if its initial request\r\n             */\r\n            if (\r\n                !isRequestSent &&\r\n                'login' in userDetails\r\n            ) {\r\n                this.getProfileDetails(userDetails.login);\r\n            }\r\n\r\n            this.setState({\r\n                userDetails,\r\n                followings,\r\n                followers,\r\n                repos,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get Followers, Following and Repository details of user.\r\n     *\r\n     * @param {string} username\r\n     */\r\n    getProfileDetails = (username) => {\r\n        this.props.dispatch(getFollowings(username));\r\n        this.props.dispatch(getFollowers(username));\r\n        this.props.dispatch(getRepos(username));\r\n\r\n        this.setState({\r\n            isRequestSent: true,\r\n        });\r\n    }\r\n\r\n    renderRepositories = () => {\r\n        const {\r\n            repos,\r\n        } = this.state;\r\n\r\n        if (repos) {\r\n            if (repos.length === 0) {\r\n                return (\r\n                    <MessageNote\r\n                        message=\"No Repositories\"\r\n                    />\r\n                );\r\n            }\r\n            return Object.values(repos).map((repo) => {\r\n                const {\r\n                    id,\r\n                    name,\r\n                } = repo;\r\n\r\n                return (\r\n                    <Repository\r\n                        key={id}\r\n                        name={name}\r\n                    />\r\n                );\r\n            });\r\n        } else {\r\n            return (\r\n                <Loader\r\n                    message=\"Loading\"\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    renderConnections = (connectionType) => {\r\n        const {\r\n            followers,\r\n            followings,\r\n        } = this.state;\r\n        let sortBy = {};\r\n\r\n        switch (connectionType) {\r\n            case 'FOLLOWING':\r\n                sortBy = followings;\r\n                break;\r\n\r\n            case 'FOLLOWERS':\r\n                sortBy = followers;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (sortBy) {\r\n            if (sortBy.length === 0) {\r\n                return (\r\n                    <MessageNote\r\n                        message={`No ${connectionType.toLowerCase()}`}\r\n                    />\r\n                );\r\n            }\r\n            return Object.values(sortBy).map((connection) => {\r\n                const {\r\n                    id,\r\n                    login,\r\n                    avatar_url,\r\n                } = connection;\r\n\r\n                return (\r\n                    <Connection\r\n                        key={id}\r\n                        username={login}\r\n                        avatar={avatar_url}\r\n                    />\r\n                );\r\n            });\r\n        } else {\r\n            return (\r\n                <Loader\r\n                    message=\"Loading\"\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            userDetails,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <nav>\r\n                    <Link\r\n                        to={'/'}\r\n                        className=\"nav-back\"\r\n                    >\r\n                        Back\r\n                    </Link>\r\n                </nav>\r\n                {\r\n                    !userDetails ?\r\n                        <Loader\r\n                            message=\"Loading\"\r\n                        /> :\r\n                        'login' in userDetails ?\r\n                            <div className=\"user-profile\">\r\n                                <div className=\"user-intro\">\r\n                                    <img alt=\"username\" src={userDetails.avatar_url} />\r\n                                    <div className=\"intro-username\">\r\n                                        @{userDetails.login}\r\n                                    </div>\r\n                                    <div className=\"intro-summary\">\r\n                                        <div className=\"intro-repo\">\r\n                                            <div>\r\n                                                Repositories\r\n                                            </div>\r\n                                            <div className=\"count\">\r\n                                                {userDetails.public_repos}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"intro-following\">\r\n                                            <div>\r\n                                                Following\r\n                                            </div>\r\n                                            <div className=\"count\">\r\n                                                {userDetails.following}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"intro-followers\">\r\n                                            <div>\r\n                                                Followers\r\n                                            </div>\r\n                                            <div className=\"count\">\r\n                                                {userDetails.followers}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"user-details\">\r\n                                    <div className=\"detail-repo\">\r\n                                        <h4>Repositories</h4>\r\n                                        {this.renderRepositories()}\r\n                                    </div>\r\n                                    <div className=\"detail-following\">\r\n                                        <h4>Following</h4>\r\n                                        {this.renderConnections('FOLLOWING')}\r\n                                    </div>\r\n                                    <div className=\"detail-followers\">\r\n                                        <h4>Followers</h4>\r\n                                        {this.renderConnections('FOLLOWERS')}\r\n                                    </div>\r\n                                </div>\r\n                            </div> :\r\n                            <MessageNote\r\n                                message={`There is no user with username ${username}`}\r\n                            />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        userDetails: state.userData.userDetails,\r\n        followings: state.userData.followings,\r\n        followers: state.userData.followers,\r\n        repos: state.userData.repos,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserProfile);\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction InduvidualUser(props) {\r\n    const {\r\n        userId,\r\n        avatarUrl,\r\n        username,\r\n    } = props;\r\n\r\n    return (\r\n        <Link\r\n            key={userId}\r\n            className=\"user-data\"\r\n            to={`/github-user/${username}`}\r\n        >\r\n            <div className=\"user-avatar\">\r\n                <img\r\n                    alt={`${username}-avatar`}\r\n                    src={avatarUrl}\r\n                />\r\n            </div>\r\n            <div className=\"user-card\">\r\n                <div className=\"username\">\r\n                    {username}\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default InduvidualUser;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport InduvidualUser from '../components/InduvidualUser';\r\nimport Loader from '../components/common/Loader';\r\nimport MessageNote from '../components/common/MessageNote';\r\nimport { searchUser } from '../action/gitHubUserAction';\r\n\r\nclass GitHubSearch extends Component {\r\n    state = {\r\n        searchKeyword: null,\r\n        searchResult: {},\r\n        isSearching: false,\r\n        noOfItems: 24,\r\n        pageNo: 1,\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n            const {\r\n                searchResult,\r\n            } = this.props;\r\n\r\n            this.setState({\r\n                searchResult,\r\n                isSearching: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const {\r\n            pageNo,\r\n            noOfItems,\r\n        } = this.state;\r\n\r\n        const {\r\n            value,\r\n        } = event.target;\r\n\r\n        this.props.dispatch(searchUser(value, pageNo, noOfItems));\r\n\r\n        this.setState({\r\n            searchKeyword: value,\r\n            isSearching: true,\r\n        });\r\n    }\r\n\r\n    renderInduvidualElement = (allUsers) => {\r\n        return Object.values(allUsers).map((user) => {\r\n            const {\r\n                id,\r\n                login,\r\n                avatar_url,\r\n            } = user;\r\n\r\n            return (\r\n                <InduvidualUser\r\n                    key={id}\r\n                    userId={id}\r\n                    avatarUrl={avatar_url}\r\n                    username={login}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    handlePagination = (request) => {\r\n        let {\r\n            pageNo,\r\n            noOfItems,\r\n            searchKeyword,\r\n        } = this.state;\r\n\r\n        if (searchKeyword && ((request === 'PREVIOUS' && pageNo > 1) || request === 'NEXT')) {\r\n            pageNo = request === 'NEXT' ? ++pageNo : --pageNo;\r\n\r\n            this.props.dispatch(searchUser(searchKeyword, pageNo, noOfItems));\r\n\r\n            this.setState({\r\n                isSearching: true,\r\n                pageNo,\r\n            });\r\n        }\r\n    }\r\n\r\n    isPaginationEnable = (request) => {\r\n        const {\r\n            searchResult,\r\n            noOfItems,\r\n            pageNo,\r\n        } = this.state;\r\n\r\n        switch (request) {\r\n            case 'NEXT':\r\n                const totalCount = searchResult && searchResult.total_count ?\r\n                    searchResult.total_count :\r\n                    1;\r\n\r\n                const totalPossiblePages = Math.floor(totalCount / noOfItems);\r\n\r\n                if (pageNo > totalPossiblePages) {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n\r\n            case 'PREVIOUS':\r\n                return pageNo > 1;\r\n\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    renderPagination = () => {\r\n        return (\r\n            <div className=\"pagination\">\r\n                <p\r\n                    className={\r\n                        this.isPaginationEnable('PREVIOUS') ?\r\n                            'previous' :\r\n                            'previous disabled'\r\n                    }\r\n                    onClick={() => this.handlePagination('PREVIOUS')}\r\n                >\r\n                    &#8678; Previous\r\n                </p>\r\n                <p\r\n                    className={\r\n                        this.isPaginationEnable('NEXT') ?\r\n                            'next' :\r\n                            'next disabled'\r\n                    }\r\n                    onClick={() => this.handlePagination('NEXT')}\r\n                >\r\n                    Next &#8680;\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        const {\r\n            isSearching,\r\n            searchResult,\r\n            pageNo,\r\n        } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <nav>\r\n                    <div className=\"logo \">\r\n                        <span className=\"primary\">GitHub</span>\r\n                        <span className=\"secondary\">Search</span>\r\n                    </div>\r\n                    <div className=\"search-input\">\r\n                        <input\r\n                            type=\"search\"\r\n                            placeholder=\"Search by username\"\r\n                            onChange={event => this.handleChange(event)}\r\n                        />\r\n                    </div>\r\n                </nav>\r\n                {\r\n                    isSearching ?\r\n                        <Loader\r\n                            message=\"Searching\"\r\n                        /> :\r\n                        !searchResult || Object.values(searchResult).length === 0 ?\r\n                            <MessageNote\r\n                                message=\"Search for a User with username\"\r\n                            /> :\r\n                            searchResult.items && searchResult.total_count > 0 ?\r\n                                <div>\r\n                                    <div className=\"search-summary\">\r\n                                        {searchResult.total_count} Users | Page No: {pageNo}\r\n                                    </div>\r\n                                    <div className=\"search-result\">\r\n                                        {this.renderInduvidualElement(searchResult.items)}\r\n                                    </div>\r\n                                </div> :\r\n                                <MessageNote\r\n                                    message=\"Sorry! No Users found for this username\"\r\n                                />\r\n                }\r\n                { this.renderPagination() }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchResult: state.userData.searchResult,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(GitHubSearch);\r\n","import React from 'react';\r\n\r\nfunction PageNotFound() {\r\n    return (\r\n        <div className=\"page-not-found\">\r\n            404\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport UserProfile from '../container/UserProfile';\r\nimport GitHubSearch from '../container/GitHubSearch';\r\nimport PageNotFound from '../components/common/PageNotFound';\r\n\r\nconst Routes = () => {\r\n    return(\r\n        <Switch>\r\n            <Route path=\"/\" exact component={GitHubSearch} />\r\n            <Route path=\"/github-user/:username\" exact component={UserProfile} />\r\n            <Route component={PageNotFound} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","const userDataReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'SEARCH_RESULT':\r\n            let searchResult = action.payload ? action.payload : null;\r\n\r\n            return { ...state, searchResult };\r\n\r\n        case 'GET_USER_DETAILS':\r\n            let userDetails = action.payload ? action.payload : null;\r\n\r\n            return { ...state, userDetails };\r\n\r\n        case 'GET_USER_FOLLOWERS':\r\n            let followers = action.payload ? action.payload : null;\r\n\r\n            return { ...state, followers };\r\n\r\n        case 'GET_USER_FOLLOWINGS':\r\n            let followings = action.payload ? action.payload : null;\r\n\r\n            return { ...state, followings };\r\n\r\n        case 'GET_USER_REPOS':\r\n            let repos = action.payload ? action.payload : null;\r\n\r\n            return { ...state, repos };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userDataReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport userData from './userDataReducer';\r\n\r\nconst allReducers = combineReducers({\r\n    userData,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport Routes from './routes/Routes';\r\nimport reducer from './reducer';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n    promiseMiddleware,\r\n    ReduxThunk\r\n)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider store={createStoreWithMiddleware(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())}>\r\n        <React.StrictMode>\r\n            <Router>\r\n                <Routes />\r\n            </Router>\r\n        </React.StrictMode>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}